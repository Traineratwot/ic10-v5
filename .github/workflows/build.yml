# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - '!src/tests/**'
      - 'package.json'
      - 'bun.lockb'
      - 'LICENSE'
      - 'README.md'
      - '.github/workflows/*.yml'
#   pull_request:
#     branches: [ "v4", "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write
    # strategy:
    #   matrix:
    #     node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Add git author
        uses: fregante/setup-git-user@v2

      - name: Install bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Create .npmrc
        run: echo //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }} > .npmrc

      - name: Test
        run: bun test

    #   - name: Pack
    #     id: build
    #     run:  echo "OUTPUT=$(npm pack)" 1> "$GITHUB_OUTPUT"

      - name: Publish
        run: npm publish --tag latest --commit-hooks false

    #   - name: 'Upload Artifact'
    #     uses: actions/upload-artifact@v4
    #     with:
    #       path: ${{ steps.build.outputs.OUTPUT }}
    #       retention-days: 60

    #   - uses: stefanzweifel/git-auto-commit-action@v5
    #     with:
    #       branch: dev
    #       file_pattern: package.json
      - name: Discord notification
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: '{{ EVENT_PAYLOAD.repository.full_name }} has been updated ðŸŸ¢.'
      - name: Discord notification
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'Build of {{ EVENT_PAYLOAD.repository.full_name }} has failed ðŸ”´. <@&848241250771533864>'

